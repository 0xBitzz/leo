---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 128
      num_constraints: 128
      at: 72135cf2aa239eead37945a3de3c3da2e2269faad6520e0f39d569d436c72530
      bt: b69c40cc3277ce8c8f9e895c3ad2bb1c4329338376ecebfa38de27e6f77f8d38
      ct: 8199c11547b06fee4848349ef1354c749be2964bea2cb0131b622f4f341a7b56
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  retn v2"
      - "decl f1: <3>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <4>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <5>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <6>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <7>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <8>"
      - "  retn false"
      - "decl f7: <9>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <10>"
      - "  retn false"
      - "decl f9: <11>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <12>"
      - "  retn 'a'"
      - "decl f11: <13>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <14>"
      - "  retn 'a'"
      - "decl f13: <15>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <16>"
      - "  retn []"
      - "decl f15: <17>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <18>"
      - "  retn []"
      - "decl f17: <19>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <20>"
      - "  retn []group"
      - "decl f19: <21>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <22>"
      - "  retn []group"
      - "decl f21: <23>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <24>"
      - "  retn 0"
      - "decl f23: <25>"
      - "  retn [0]"
      - "decl f24: <26>"
      - "  retn 0"
      - "decl f25: <27>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <28>"
      - "  retn 0"
      - "decl f27: <29>"
      - "  retn [0, 0]"
      - "decl f28: <30>"
      - "  retn 0"
      - "decl f29: <31>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <32>"
      - "  retn 0"
      - "decl f31: <33>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <34>"
      - "  retn 0"
      - "decl f33: <35>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <36>"
      - "  retn 0"
      - "decl f35: <37>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <38>"
      - "  retn 0"
      - "decl f37: <39>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <40>"
      - "  retn 0"
      - "decl f39: <41>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <42>"
      - "  retn 0"
      - "decl f41: <43>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <44>"
      - "  retn 0"
      - "decl f43: <45>"
      - "  retn [0]"
      - "decl f44: <46>"
      - "  retn 0"
      - "decl f45: <47>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <48>"
      - "  retn 0"
      - "decl f47: <49>"
      - "  retn [0, 0]"
      - "decl f48: <50>"
      - "  retn 0"
      - "decl f49: <51>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <52>"
      - "  retn 0"
      - "decl f51: <53>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <54>"
      - "  retn 0"
      - "decl f53: <55>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <56>"
      - "  retn 0"
      - "decl f55: <57>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <58>"
      - "  retn 0"
      - "decl f57: <59>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <60>"
      - "  retn 0"
      - "decl f59: <61>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <62>"
      - "  retn 0"
      - ""
    output:
      - input_file: input/array.in
        output:
          registers:
            r2:
              type: "[[u8; 4]; 2]"
              value: "[[0, 0, 0, 0], [0, 0, 0, 0]]"
    initial_ast: ef0990720dc06d560b3eb028e9017f0634892515b31e5ef1f1cedf38911e13ae
    imports_resolved_ast: cdff8ab496d8273e90e1922a526c48ed572616896ea1350b021e3b20115414f9
    canonicalized_ast: cdff8ab496d8273e90e1922a526c48ed572616896ea1350b021e3b20115414f9
    type_inferenced_ast: 9cc5ddbee45057160b0cb54ded29ac199701dda387ad7fb423580438efdc52b4
