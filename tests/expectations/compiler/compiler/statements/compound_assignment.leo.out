---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 10
      num_constraints: 10
      at: 059df7a9f33d273d72d4cdd66c40f343577291eeff60c2130f493092e113cbd5
      bt: 33357b08e1eae5a3cb450b7aa066201d3f3715cc4c8422edc89e1306aa69e05c
      ct: 4d417efac51835eb0795550275c95bc7001c6e50f0c37e7ff381af198cfb7a8a
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, 10"
      - "  add &v4, v3, 20"
      - "  store &v3, v4"
      - "  store &v5, 3"
      - "  add &v6, v5, v3"
      - "  store &v5, v6"
      - "  store &v7, [1, 2, 3, 4]"
      - "  aget &v8, v7, 0"
      - "  add &v9, v8, 3"
      - "  aget &v10, v7, 0"
      - "  aset &v7, 0, v9"
      - "  store &v7, v7"
      - "  asget &v11, v7, 0, 3, 3"
      - "  aget &v12, v11, 1"
      - "  mul &v13, v12, 3"
      - "  asget &v14, v7, 0, 3, 3"
      - "  aget &v15, v14, 1"
      - "  aset &v14, 1, v13"
      - "  asset &v7, 0, 3, v14"
      - "  store &v7, v7"
      - "  store &v16, (1, 2)"
      - "  tget &v17, v16, 1"
      - "  add &v18, v17, 3"
      - "  tget &v19, v16, 1"
      - "  tset &v16, 1, v18"
      - "  store &v16, v16"
      - "  store &v20, (6, (1, 1))"
      - "  tget &v21, v20, 0"
      - "  add &v22, v21, 2"
      - "  tget &v23, v20, 0"
      - "  tset &v20, 0, v22"
      - "  store &v20, v20"
      - "  store &v24, 2"
      - "  add &v25, v24, 21"
      - "  store &v24, v25"
      - "  store &v26, [[0], [0], [0], [0]]"
      - "  aget &v27, v26, 2"
      - "  aget &v28, v27, 0"
      - "  add &v29, v28, 1"
      - "  aget &v30, v26, 2"
      - "  aget &v31, v30, 0"
      - "  aset &v30, 0, v29"
      - "  aset &v26, 2, v30"
      - "  store &v26, v26"
      - "  store &v32, [[0], [0], [0], [0]]"
      - "  aget &v33, v32, 2"
      - "  aget &v34, v33, 0"
      - "  add &v35, v34, 1"
      - "  aget &v36, v32, 2"
      - "  aget &v37, v36, 0"
      - "  aset &v36, 0, v35"
      - "  aset &v32, 2, v36"
      - "  store &v32, v32"
      - "  eq &v38, v3, 30"
      - "  eq &v39, v5, 33"
      - "  and &v40, v38, v39"
      - "  aget &v41, v7, 0"
      - "  eq &v42, v41, 4"
      - "  and &v43, v40, v42"
      - "  aget &v44, v7, 1"
      - "  eq &v45, v44, 6"
      - "  and &v46, v43, v45"
      - "  tget &v47, v16, 1"
      - "  eq &v48, v47, 5"
      - "  and &v49, v46, v48"
      - "  tget &v50, v20, 0"
      - "  eq &v51, v50, 8"
      - "  and &v52, v49, v51"
      - "  aget &v53, v26, 2"
      - "  aget &v54, v53, 0"
      - "  eq &v55, v54, 1"
      - "  and &v56, v52, v55"
      - "  aget &v57, v26, 2"
      - "  aget &v58, v57, 0"
      - "  eq &v59, v58, 1"
      - "  and &v60, v56, v59"
      - "  and &v61, v60, v2"
      - "  retn v61"
      - "decl f1: <62>"
      - "  tget &v63, v62, 1"
      - "  tget &v64, v63, 0"
      - "  add &v65, v64, 1"
      - "  tget &v66, v62, 1"
      - "  tget &v67, v66, 0"
      - "  tset &v66, 0, v65"
      - "  tset &v62, 1, v66"
      - "  store &v62, v62"
      - "  retn (v62, 1)"
      - "decl f2: <68>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f3: <69>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f4: <70>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f5: <71>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f6: <72>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f7: <73>"
      - "  retn false"
      - "decl f8: <74>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f9: <75>"
      - "  retn false"
      - "decl f10: <76>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f11: <77>"
      - "  retn 'a'"
      - "decl f12: <78>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f13: <79>"
      - "  retn 'a'"
      - "decl f14: <80>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f15: <81>"
      - "  retn []"
      - "decl f16: <82>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f17: <83>"
      - "  retn []"
      - "decl f18: <84>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f19: <85>"
      - "  retn []group"
      - "decl f20: <86>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f21: <87>"
      - "  retn []group"
      - "decl f22: <88>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f23: <89>"
      - "  retn 0"
      - "decl f24: <90>"
      - "  retn [0]"
      - "decl f25: <91>"
      - "  retn 0"
      - "decl f26: <92>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f27: <93>"
      - "  retn 0"
      - "decl f28: <94>"
      - "  retn [0, 0]"
      - "decl f29: <95>"
      - "  retn 0"
      - "decl f30: <96>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f31: <97>"
      - "  retn 0"
      - "decl f32: <98>"
      - "  retn [0, 0, 0, 0]"
      - "decl f33: <99>"
      - "  retn 0"
      - "decl f34: <100>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f35: <101>"
      - "  retn 0"
      - "decl f36: <102>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f37: <103>"
      - "  retn 0"
      - "decl f38: <104>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f39: <105>"
      - "  retn 0"
      - "decl f40: <106>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f41: <107>"
      - "  retn 0"
      - "decl f42: <108>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f43: <109>"
      - "  retn 0"
      - "decl f44: <110>"
      - "  retn [0]"
      - "decl f45: <111>"
      - "  retn 0"
      - "decl f46: <112>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f47: <113>"
      - "  retn 0"
      - "decl f48: <114>"
      - "  retn [0, 0]"
      - "decl f49: <115>"
      - "  retn 0"
      - "decl f50: <116>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f51: <117>"
      - "  retn 0"
      - "decl f52: <118>"
      - "  retn [0, 0, 0, 0]"
      - "decl f53: <119>"
      - "  retn 0"
      - "decl f54: <120>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f55: <121>"
      - "  retn 0"
      - "decl f56: <122>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f57: <123>"
      - "  retn 0"
      - "decl f58: <124>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f59: <125>"
      - "  retn 0"
      - "decl f60: <126>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f61: <127>"
      - "  retn 0"
      - ""
    output:
      - input_file: inputs/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: 990316428cb83675982a60a9a642fdc17c7ae7e477c545f65e7d4c17d2980c89
    imports_resolved_ast: ae031f19c27ddc66cf6dec4f19ad8174bb58e89c4f43e820bae6bcb3c01da4cc
    canonicalized_ast: 84f7cf1ea860811761c01bbb0ccfe0b4c2e3c03f4ca018800415e0c25eafbbd0
    type_inferenced_ast: f0e2f0a534c58507f4c12adce3b8978897615b030911b079b3e07c34cd61298a
