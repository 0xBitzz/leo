---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 113
      num_constraints: 114
      at: d322b11389067bfa3de3e1b7f1e3e564382d4ad3771bbf8657e939eed797544b
      bt: 480297d1273d42309369b4c4f27f7076720606e3582c24fabeac3afc8c3af1ea
      ct: 33c8d034b3aea9e88426996ff9c425351f065f3a48377739b7279c8f3ad84e21
    ir:
      - "decl f0: <0>"
      - "  store &v2, ((v0, v1), (), (), ())"
      - "  call &v4, f1"
      - "  tget &v5, v4, 0"
      - "  tget &v6, v4, 1"
      - "  add &v7, v3, v6"
      - "  retn (v5, v7)"
      - "decl f1: <8>"
      - "  store &v8, (1, 2)"
      - "  store &v9, 3"
      - "  retn ((1, 2), 3)"
      - "decl f2: <10>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f3: <11>"
      - "  retn 0"
      - "decl f4: <12>"
      - "  retn [0]"
      - "decl f5: <13>"
      - "  retn 0"
      - "decl f6: <14>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f7: <15>"
      - "  retn 0"
      - "decl f8: <16>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f9: <17>"
      - "  retn 0"
      - "decl f10: <18>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f11: <19>"
      - "  retn 0"
      - "decl f12: <20>"
      - "  retn [0, 0, 0, 0]"
      - "decl f13: <21>"
      - "  retn 0"
      - "decl f14: <22>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f15: <23>"
      - "  retn 0"
      - "decl f16: <24>"
      - "  retn [0, 0]"
      - "decl f17: <25>"
      - "  retn 0"
      - "decl f18: <26>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f19: <27>"
      - "  retn 0"
      - "decl f20: <28>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f21: <29>"
      - "  retn 0"
      - "decl f22: <30>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f23: <31>"
      - "  retn 0"
      - "decl f24: <32>"
      - "  retn [0]"
      - "decl f25: <33>"
      - "  retn 0"
      - "decl f26: <34>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f27: <35>"
      - "  retn 0"
      - "decl f28: <36>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f29: <37>"
      - "  retn 0"
      - "decl f30: <38>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f31: <39>"
      - "  retn 0"
      - "decl f32: <40>"
      - "  retn [0, 0, 0, 0]"
      - "decl f33: <41>"
      - "  retn 0"
      - "decl f34: <42>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f35: <43>"
      - "  retn 0"
      - "decl f36: <44>"
      - "  retn [0, 0]"
      - "decl f37: <45>"
      - "  retn 0"
      - "decl f38: <46>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f39: <47>"
      - "  retn 0"
      - "decl f40: <48>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f41: <49>"
      - "  retn 0"
      - "decl f42: <50>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f43: <51>"
      - "  retn []group"
      - "decl f44: <52>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f45: <53>"
      - "  retn []group"
      - "decl f46: <54>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f47: <55>"
      - "  retn []"
      - "decl f48: <56>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f49: <57>"
      - "  retn []"
      - "decl f50: <58>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f51: <59>"
      - "  retn 'a'"
      - "decl f52: <60>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f53: <61>"
      - "  retn 'a'"
      - "decl f54: <62>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f55: <63>"
      - "  retn false"
      - "decl f56: <64>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f57: <65>"
      - "  retn false"
      - "decl f58: <66>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f59: <67>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f60: <68>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f61: <69>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - ""
    output:
      - input_file: tuple.in
        output:
          registers:
            r0:
              type: "(u8, u8)"
              value: "(1, 2)"
            r1:
              type: u32
              value: "103"
    initial_ast: b313b071944867ad79a59fb390f4b6a29fbb7ceac44b5ae23003714ac4ef38f8
    imports_resolved_ast: dce5c7a51cbb179070372d5489602480728e96e3fe04a9b3964b75d267a8bd56
    canonicalized_ast: dce5c7a51cbb179070372d5489602480728e96e3fe04a9b3964b75d267a8bd56
    type_inferenced_ast: 97845ac37d04be330e96c058d05fbae853c25500d41320b72f05f4ebca024b5a
