---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 3
      num_constraints: 3
      at: 74affd242c169638ba2ba913cd2fa5d4070eef1055c7d8ac57dfb6d449d8fb14
      bt: fa4399093f64457849c38de4cad4cab3e1d90743e8be07d1b156b6088c5851ec
      ct: 5ae1625b488b3935122d8dd627fe575b388a5aa360378fa4407aad08baaed1e2
    ir:
      - "decl f0: <0>"
      - "  store &v2, ((v0, v1), (), (), ())"
      - "  call &v4, f1"
      - "  call &v5, f1"
      - "  and &v6, v4, v5"
      - "  store &v7, v6"
      - "  eq &v8, v7, true"
      - "  eq &v9, v8, v3"
      - "  retn v9"
      - "decl f1: <10>"
      - "  retn true"
      - "decl f2: <10>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f3: <11>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f4: <12>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f5: <13>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f6: <14>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f7: <15>"
      - "  retn false"
      - "decl f8: <16>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f9: <17>"
      - "  retn false"
      - "decl f10: <18>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f11: <19>"
      - "  retn 'a'"
      - "decl f12: <20>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f13: <21>"
      - "  retn 'a'"
      - "decl f14: <22>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f15: <23>"
      - "  retn []"
      - "decl f16: <24>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f17: <25>"
      - "  retn []"
      - "decl f18: <26>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f19: <27>"
      - "  retn []group"
      - "decl f20: <28>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f21: <29>"
      - "  retn []group"
      - "decl f22: <30>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f23: <31>"
      - "  retn 0"
      - "decl f24: <32>"
      - "  retn [0]"
      - "decl f25: <33>"
      - "  retn 0"
      - "decl f26: <34>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f27: <35>"
      - "  retn 0"
      - "decl f28: <36>"
      - "  retn [0, 0]"
      - "decl f29: <37>"
      - "  retn 0"
      - "decl f30: <38>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f31: <39>"
      - "  retn 0"
      - "decl f32: <40>"
      - "  retn [0, 0, 0, 0]"
      - "decl f33: <41>"
      - "  retn 0"
      - "decl f34: <42>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f35: <43>"
      - "  retn 0"
      - "decl f36: <44>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f37: <45>"
      - "  retn 0"
      - "decl f38: <46>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f39: <47>"
      - "  retn 0"
      - "decl f40: <48>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f41: <49>"
      - "  retn 0"
      - "decl f42: <50>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f43: <51>"
      - "  retn 0"
      - "decl f44: <52>"
      - "  retn [0]"
      - "decl f45: <53>"
      - "  retn 0"
      - "decl f46: <54>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f47: <55>"
      - "  retn 0"
      - "decl f48: <56>"
      - "  retn [0, 0]"
      - "decl f49: <57>"
      - "  retn 0"
      - "decl f50: <58>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f51: <59>"
      - "  retn 0"
      - "decl f52: <60>"
      - "  retn [0, 0, 0, 0]"
      - "decl f53: <61>"
      - "  retn 0"
      - "decl f54: <62>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f55: <63>"
      - "  retn 0"
      - "decl f56: <64>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f57: <65>"
      - "  retn 0"
      - "decl f58: <66>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f59: <67>"
      - "  retn 0"
      - "decl f60: <68>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f61: <69>"
      - "  retn 0"
      - ""
    output:
      - input_file: input/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: 5b3a371504ef6044894ebf0ed9be5685792f80484af2315a50632ac0769c1a57
    imports_resolved_ast: b6c8ddbe0f9b32d51d55ed7b0e7aa9dc9c84297f7aa3aba46a85d9165d84c1b5
    canonicalized_ast: b6c8ddbe0f9b32d51d55ed7b0e7aa9dc9c84297f7aa3aba46a85d9165d84c1b5
    type_inferenced_ast: 5311673a7d4049d4008356b4afbd5aad2ecc7ee0626352aa3e4a61a114287d83
