---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 2
      num_constraints: 2
      at: 401937c524c61a28b4fab76d7a1f85bb628850012af62362a0922610372faf92
      bt: cdf9a9cee4f2edf55111a95ae60bde9801080f6bde638a5c79273a39a2f9f7f5
      ct: 643d5437104296e21d906ecb15b2c96ad278f20cfc4af53b12bb6069bd853726
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  call &v3, f1"
      - "  store &v4, v3"
      - "  tget &v5, v4, 0"
      - "  eq &v6, v5, 1"
      - "  and &v7, v6, v2"
      - "  retn v7"
      - "decl f1: <8>"
      - "  store &v8, (1)"
      - "  retn v8"
      - "decl f2: <9>"
      - "  store &v9, [0, 1, 2, 3]"
      - "  aget &v10, v9, 0"
      - "  add &v11, v10, 2"
      - "  aget &v12, v9, 0"
      - "  aset &v9, 0, v11"
      - "  store &v9, v9"
      - "decl f3: <13>"
      - "  store &v15, (1)"
      - "decl f4: <16>"
      - "decl f5: <17>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <18>"
      - "  retn 0"
      - "decl f7: <19>"
      - "  retn [0]"
      - "decl f8: <20>"
      - "  retn 0"
      - "decl f9: <21>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f10: <22>"
      - "  retn 0"
      - "decl f11: <23>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <24>"
      - "  retn 0"
      - "decl f13: <25>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f14: <26>"
      - "  retn 0"
      - "decl f15: <27>"
      - "  retn [0, 0, 0, 0]"
      - "decl f16: <28>"
      - "  retn 0"
      - "decl f17: <29>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f18: <30>"
      - "  retn 0"
      - "decl f19: <31>"
      - "  retn [0, 0]"
      - "decl f20: <32>"
      - "  retn 0"
      - "decl f21: <33>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f22: <34>"
      - "  retn 0"
      - "decl f23: <35>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f24: <36>"
      - "  retn 0"
      - "decl f25: <37>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f26: <38>"
      - "  retn 0"
      - "decl f27: <39>"
      - "  retn [0]"
      - "decl f28: <40>"
      - "  retn 0"
      - "decl f29: <41>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <42>"
      - "  retn 0"
      - "decl f31: <43>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f32: <44>"
      - "  retn 0"
      - "decl f33: <45>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <46>"
      - "  retn 0"
      - "decl f35: <47>"
      - "  retn [0, 0, 0, 0]"
      - "decl f36: <48>"
      - "  retn 0"
      - "decl f37: <49>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <50>"
      - "  retn 0"
      - "decl f39: <51>"
      - "  retn [0, 0]"
      - "decl f40: <52>"
      - "  retn 0"
      - "decl f41: <53>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f42: <54>"
      - "  retn 0"
      - "decl f43: <55>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f44: <56>"
      - "  retn 0"
      - "decl f45: <57>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f46: <58>"
      - "  retn []group"
      - "decl f47: <59>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f48: <60>"
      - "  retn []group"
      - "decl f49: <61>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f50: <62>"
      - "  retn []"
      - "decl f51: <63>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f52: <64>"
      - "  retn []"
      - "decl f53: <65>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f54: <66>"
      - "  retn 'a'"
      - "decl f55: <67>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <68>"
      - "  retn 'a'"
      - "decl f57: <69>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f58: <70>"
      - "  retn false"
      - "decl f59: <71>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <72>"
      - "  retn false"
      - "decl f61: <73>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f62: <74>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f63: <75>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f64: <76>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - ""
    output:
      - input_file: input/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: fec09c4e514d4b2e6c9fd88067c198f29f7c5751bb92b0b52ea42ea50c043ca2
    imports_resolved_ast: 7d79d248548ce881608dbf090913e000a15ce6f7fbe1fb352ec01fd5d4a9c2e6
    canonicalized_ast: 081bf57f0cbc5c2c024b706a44b6c884f66c2ff4f0d4a11b5e7ee7e3068e94f7
    type_inferenced_ast: 1506c4ab78a4316a01e296d3b6fda51addbb4087db1435c631aca2d396f9bc1d
