---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 96
      num_constraints: 96
      at: dd7eb060685c94def913327b205b993dea7e88392559c44bdde58fb16a977c3e
      bt: 1bca8e18695437c76e0a121dc2573bbfef48f0b7f8d2227ac74209d50b6953e8
      ct: e92db7709ab3fe90ecb7533771ca68141584d51d7916fef12a3360eccd6fc04e
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  call &v3, f1, v2"
      - "  store &v4, v3"
      - "  eq &v5, v2, v4"
      - "  retn v5"
      - "decl f1: <6>"
      - "  store &v7, (v6)"
      - "  tget &v8, v7, 0"
      - "  retn v8"
      - "decl f2: <9>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f3: <10>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f4: <11>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f5: <12>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f6: <13>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f7: <14>"
      - "  retn false"
      - "decl f8: <15>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f9: <16>"
      - "  retn false"
      - "decl f10: <17>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f11: <18>"
      - "  retn 'a'"
      - "decl f12: <19>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f13: <20>"
      - "  retn 'a'"
      - "decl f14: <21>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f15: <22>"
      - "  retn []"
      - "decl f16: <23>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f17: <24>"
      - "  retn []"
      - "decl f18: <25>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f19: <26>"
      - "  retn []group"
      - "decl f20: <27>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f21: <28>"
      - "  retn []group"
      - "decl f22: <29>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f23: <30>"
      - "  retn 0"
      - "decl f24: <31>"
      - "  retn [0]"
      - "decl f25: <32>"
      - "  retn 0"
      - "decl f26: <33>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f27: <34>"
      - "  retn 0"
      - "decl f28: <35>"
      - "  retn [0, 0]"
      - "decl f29: <36>"
      - "  retn 0"
      - "decl f30: <37>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f31: <38>"
      - "  retn 0"
      - "decl f32: <39>"
      - "  retn [0, 0, 0, 0]"
      - "decl f33: <40>"
      - "  retn 0"
      - "decl f34: <41>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f35: <42>"
      - "  retn 0"
      - "decl f36: <43>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f37: <44>"
      - "  retn 0"
      - "decl f38: <45>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f39: <46>"
      - "  retn 0"
      - "decl f40: <47>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f41: <48>"
      - "  retn 0"
      - "decl f42: <49>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f43: <50>"
      - "  retn 0"
      - "decl f44: <51>"
      - "  retn [0]"
      - "decl f45: <52>"
      - "  retn 0"
      - "decl f46: <53>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f47: <54>"
      - "  retn 0"
      - "decl f48: <55>"
      - "  retn [0, 0]"
      - "decl f49: <56>"
      - "  retn 0"
      - "decl f50: <57>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f51: <58>"
      - "  retn 0"
      - "decl f52: <59>"
      - "  retn [0, 0, 0, 0]"
      - "decl f53: <60>"
      - "  retn 0"
      - "decl f54: <61>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f55: <62>"
      - "  retn 0"
      - "decl f56: <63>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f57: <64>"
      - "  retn 0"
      - "decl f58: <65>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f59: <66>"
      - "  retn 0"
      - "decl f60: <67>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f61: <68>"
      - "  retn 0"
      - ""
    output:
      - input_file: func_circ.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: e19ff71dfbb326bb80d7191f8ddcd532d2c32204edca739a31c1766c67d9067c
    imports_resolved_ast: 9e2dd918789309f77e84feb4902ad225192785f85985b44ecae057a33657fbce
    canonicalized_ast: 9e2dd918789309f77e84feb4902ad225192785f85985b44ecae057a33657fbce
    type_inferenced_ast: aa416b10bd4ac571792695b905f77cd01e4e5d39db4ddb8b3a83c60cce57b12f
