---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 2
      num_constraints: 2
      at: 401937c524c61a28b4fab76d7a1f85bb628850012af62362a0922610372faf92
      bt: cdf9a9cee4f2edf55111a95ae60bde9801080f6bde638a5c79273a39a2f9f7f5
      ct: 643d5437104296e21d906ecb15b2c96ad278f20cfc4af53b12bb6069bd853726
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  call &v3, f3"
      - "  eq &v4, v2, true"
      - "  retn v4"
      - "decl f1: <5>"
      - "decl f2: <5>"
      - "  call &v5, f1"
      - "decl f3: <6>"
      - "  call &v6, f2"
      - "decl f4: <7>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f5: <8>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f6: <9>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f7: <10>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f8: <11>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f9: <12>"
      - "  retn false"
      - "decl f10: <13>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f11: <14>"
      - "  retn false"
      - "decl f12: <15>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f13: <16>"
      - "  retn 'a'"
      - "decl f14: <17>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f15: <18>"
      - "  retn 'a'"
      - "decl f16: <19>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f17: <20>"
      - "  retn []"
      - "decl f18: <21>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f19: <22>"
      - "  retn []"
      - "decl f20: <23>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f21: <24>"
      - "  retn []group"
      - "decl f22: <25>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f23: <26>"
      - "  retn []group"
      - "decl f24: <27>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f25: <28>"
      - "  retn 0"
      - "decl f26: <29>"
      - "  retn [0]"
      - "decl f27: <30>"
      - "  retn 0"
      - "decl f28: <31>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f29: <32>"
      - "  retn 0"
      - "decl f30: <33>"
      - "  retn [0, 0]"
      - "decl f31: <34>"
      - "  retn 0"
      - "decl f32: <35>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f33: <36>"
      - "  retn 0"
      - "decl f34: <37>"
      - "  retn [0, 0, 0, 0]"
      - "decl f35: <38>"
      - "  retn 0"
      - "decl f36: <39>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f37: <40>"
      - "  retn 0"
      - "decl f38: <41>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f39: <42>"
      - "  retn 0"
      - "decl f40: <43>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f41: <44>"
      - "  retn 0"
      - "decl f42: <45>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f43: <46>"
      - "  retn 0"
      - "decl f44: <47>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f45: <48>"
      - "  retn 0"
      - "decl f46: <49>"
      - "  retn [0]"
      - "decl f47: <50>"
      - "  retn 0"
      - "decl f48: <51>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f49: <52>"
      - "  retn 0"
      - "decl f50: <53>"
      - "  retn [0, 0]"
      - "decl f51: <54>"
      - "  retn 0"
      - "decl f52: <55>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f53: <56>"
      - "  retn 0"
      - "decl f54: <57>"
      - "  retn [0, 0, 0, 0]"
      - "decl f55: <58>"
      - "  retn 0"
      - "decl f56: <59>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f57: <60>"
      - "  retn 0"
      - "decl f58: <61>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f59: <62>"
      - "  retn 0"
      - "decl f60: <63>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f61: <64>"
      - "  retn 0"
      - "decl f62: <65>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f63: <66>"
      - "  retn 0"
      - ""
    output:
      - input_file: input/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: cf30fce00961ff6a108f4a0239a26eb1f4064ef1c1fb837dcbc8ebfd0f001d7c
    imports_resolved_ast: 9497bcf44a1afaeac58fe4272c4f612ee0a97ac964a9de7da3e3f8fa281ac0c4
    canonicalized_ast: 87c339dcbee45759ab40924b3184a3dc26822725898d8cf0d002e332de172015
    type_inferenced_ast: 1685d4a35dc1e007634fa5f5d9cde61c56d24728be0e63d4b032305e325c7a7d
