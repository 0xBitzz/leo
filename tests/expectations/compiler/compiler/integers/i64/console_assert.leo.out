---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 255
      num_constraints: 255
      at: 68080cb19b62be7f91ee2118affb7b55ea272e15e17581869385053a5c6d3623
      bt: 2c1d031e57e285b1277f2c37853fc7fdff23711e1147d7b26ed74d3acd28ceff
      ct: 0b136215b60005ed17aa4eea76bc4e2b0349c0fecf57dc06f5dba31981f270d0
    ir:
      - "decl f0: <0>"
      - "  store &v0, ((), (), (), ())"
      - "  eq &v3, v1, v2"
      - "  assert v3"
      - "decl f1: <4>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <5>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <6>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <7>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <8>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <9>"
      - "  retn false"
      - "decl f7: <10>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <11>"
      - "  retn false"
      - "decl f9: <12>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <13>"
      - "  retn 'a'"
      - "decl f11: <14>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <15>"
      - "  retn 'a'"
      - "decl f13: <16>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <17>"
      - "  retn []"
      - "decl f15: <18>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <19>"
      - "  retn []"
      - "decl f17: <20>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <21>"
      - "  retn []group"
      - "decl f19: <22>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <23>"
      - "  retn []group"
      - "decl f21: <24>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <25>"
      - "  retn 0"
      - "decl f23: <26>"
      - "  retn [0]"
      - "decl f24: <27>"
      - "  retn 0"
      - "decl f25: <28>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <29>"
      - "  retn 0"
      - "decl f27: <30>"
      - "  retn [0, 0]"
      - "decl f28: <31>"
      - "  retn 0"
      - "decl f29: <32>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <33>"
      - "  retn 0"
      - "decl f31: <34>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <35>"
      - "  retn 0"
      - "decl f33: <36>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <37>"
      - "  retn 0"
      - "decl f35: <38>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <39>"
      - "  retn 0"
      - "decl f37: <40>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <41>"
      - "  retn 0"
      - "decl f39: <42>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <43>"
      - "  retn 0"
      - "decl f41: <44>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <45>"
      - "  retn 0"
      - "decl f43: <46>"
      - "  retn [0]"
      - "decl f44: <47>"
      - "  retn 0"
      - "decl f45: <48>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <49>"
      - "  retn 0"
      - "decl f47: <50>"
      - "  retn [0, 0]"
      - "decl f48: <51>"
      - "  retn 0"
      - "decl f49: <52>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <53>"
      - "  retn 0"
      - "decl f51: <54>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <55>"
      - "  retn 0"
      - "decl f53: <56>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <57>"
      - "  retn 0"
      - "decl f55: <58>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <59>"
      - "  retn 0"
      - "decl f57: <60>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <61>"
      - "  retn 0"
      - "decl f59: <62>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <63>"
      - "  retn 0"
      - ""
    output:
      - input_file: i64.in
        output:
          registers: {}
    initial_ast: fb559ddb55c3200114fcd3e18fb03f7e168b546d683e387e126e5e2c4bb831c3
    imports_resolved_ast: 815bf02c219d82ed0d3354ea54fffe78f05837d66c3ddd95e4195fa583fb2631
    canonicalized_ast: 6deae497a2218f7f4c576301db8ebc71eec5ac264b2064bde69bd66ddccf3384
    type_inferenced_ast: dd946357af9dfaf4ea78757a6a462630ed91a766dbc7c3c20461ad907c0f2b1e
