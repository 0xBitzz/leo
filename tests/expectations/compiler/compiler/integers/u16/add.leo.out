---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 97
      num_constraints: 98
      at: b31b02a5133a63f6a8e468126914147a16a24556aa6a771ee895bf340abd4df5
      bt: 9c4355618bf55f2db5518a0e401fefbb75316640e9de5b96d138e9f7ba8730bb
      ct: 6a52f77ad4d1c91e6c3b6e1a1cdeef143bc9d91319b5c3c7440400c0fbde185f
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  add &v5, v2, v3"
      - "  eq &v6, v5, v4"
      - "  retn v6"
      - "decl f1: <7>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <8>"
      - "  retn 0"
      - "decl f3: <9>"
      - "  retn [0]"
      - "decl f4: <10>"
      - "  retn 0"
      - "decl f5: <11>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f6: <12>"
      - "  retn 0"
      - "decl f7: <13>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <14>"
      - "  retn 0"
      - "decl f9: <15>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f10: <16>"
      - "  retn 0"
      - "decl f11: <17>"
      - "  retn [0, 0, 0, 0]"
      - "decl f12: <18>"
      - "  retn 0"
      - "decl f13: <19>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f14: <20>"
      - "  retn 0"
      - "decl f15: <21>"
      - "  retn [0, 0]"
      - "decl f16: <22>"
      - "  retn 0"
      - "decl f17: <23>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f18: <24>"
      - "  retn 0"
      - "decl f19: <25>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <26>"
      - "  retn 0"
      - "decl f21: <27>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <28>"
      - "  retn 0"
      - "decl f23: <29>"
      - "  retn [0]"
      - "decl f24: <30>"
      - "  retn 0"
      - "decl f25: <31>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <32>"
      - "  retn 0"
      - "decl f27: <33>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f28: <34>"
      - "  retn 0"
      - "decl f29: <35>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <36>"
      - "  retn 0"
      - "decl f31: <37>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <38>"
      - "  retn 0"
      - "decl f33: <39>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <40>"
      - "  retn 0"
      - "decl f35: <41>"
      - "  retn [0, 0]"
      - "decl f36: <42>"
      - "  retn 0"
      - "decl f37: <43>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <44>"
      - "  retn 0"
      - "decl f39: <45>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <46>"
      - "  retn 0"
      - "decl f41: <47>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <48>"
      - "  retn []group"
      - "decl f43: <49>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f44: <50>"
      - "  retn []group"
      - "decl f45: <51>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f46: <52>"
      - "  retn []"
      - "decl f47: <53>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f48: <54>"
      - "  retn []"
      - "decl f49: <55>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f50: <56>"
      - "  retn 'a'"
      - "decl f51: <57>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f52: <58>"
      - "  retn 'a'"
      - "decl f53: <59>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f54: <60>"
      - "  retn false"
      - "decl f55: <61>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <62>"
      - "  retn false"
      - "decl f57: <63>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f58: <64>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f59: <65>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <66>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - ""
    output:
      - input_file: u16.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: dfe1074c19503c7796d607409634a7e38a3c977f775e941ab43732c5c81cd480
    imports_resolved_ast: 455ae59c30b61185214b10c0cc506404d0980310c656c201f5e73224990c37fd
    canonicalized_ast: 455ae59c30b61185214b10c0cc506404d0980310c656c201f5e73224990c37fd
    type_inferenced_ast: 2fbb24b88fa15722834e5c2d1a90519b6288743bef4c12f102e27475c97d4007
