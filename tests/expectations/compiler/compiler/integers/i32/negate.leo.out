---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 190
      num_constraints: 190
      at: c437829299b1bd54eaa34d8c2944282ae496ca8b406b3e63153cf90ea4b0c26c
      bt: f67ba97cf19e144d52250e3516f30b452853e281c130b71910357054f39ea93d
      ct: ae2919766d8ddb409fbf5f17d05162e79049d3266470ad7835a7a05c468d0538
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  negate &v4, v2"
      - "  eq &v5, v4, v3"
      - "  retn v5"
      - "decl f1: <6>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <7>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <8>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <9>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <10>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <11>"
      - "  retn false"
      - "decl f7: <12>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <13>"
      - "  retn false"
      - "decl f9: <14>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <15>"
      - "  retn 'a'"
      - "decl f11: <16>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <17>"
      - "  retn 'a'"
      - "decl f13: <18>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <19>"
      - "  retn []"
      - "decl f15: <20>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <21>"
      - "  retn []"
      - "decl f17: <22>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <23>"
      - "  retn []group"
      - "decl f19: <24>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <25>"
      - "  retn []group"
      - "decl f21: <26>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <27>"
      - "  retn 0"
      - "decl f23: <28>"
      - "  retn [0]"
      - "decl f24: <29>"
      - "  retn 0"
      - "decl f25: <30>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <31>"
      - "  retn 0"
      - "decl f27: <32>"
      - "  retn [0, 0]"
      - "decl f28: <33>"
      - "  retn 0"
      - "decl f29: <34>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <35>"
      - "  retn 0"
      - "decl f31: <36>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <37>"
      - "  retn 0"
      - "decl f33: <38>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <39>"
      - "  retn 0"
      - "decl f35: <40>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <41>"
      - "  retn 0"
      - "decl f37: <42>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <43>"
      - "  retn 0"
      - "decl f39: <44>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <45>"
      - "  retn 0"
      - "decl f41: <46>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <47>"
      - "  retn 0"
      - "decl f43: <48>"
      - "  retn [0]"
      - "decl f44: <49>"
      - "  retn 0"
      - "decl f45: <50>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <51>"
      - "  retn 0"
      - "decl f47: <52>"
      - "  retn [0, 0]"
      - "decl f48: <53>"
      - "  retn 0"
      - "decl f49: <54>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <55>"
      - "  retn 0"
      - "decl f51: <56>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <57>"
      - "  retn 0"
      - "decl f53: <58>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <59>"
      - "  retn 0"
      - "decl f55: <60>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <61>"
      - "  retn 0"
      - "decl f57: <62>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <63>"
      - "  retn 0"
      - "decl f59: <64>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <65>"
      - "  retn 0"
      - ""
    output:
      - input_file: i32.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
      - input_file: i32.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: 8cfc01514d8f5412ece8209a306b0cb5598efddbc4d6e298c54a11ab28ed821c
    imports_resolved_ast: e7d7dfc87d13cc39a0b31f0883dcaca47f9cbc15cb23b0c196cf78437fa8cc80
    canonicalized_ast: e7d7dfc87d13cc39a0b31f0883dcaca47f9cbc15cb23b0c196cf78437fa8cc80
    type_inferenced_ast: 800a569a8162c7cc35f12a716d2045ae2b99b43bb0a1488b05516d29b781746d
