---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 897
      num_constraints: 1025
      at: d77e3a78856021f4168879a52deae4aa0ae2f794684ea6d543003696b284d360
      bt: 22979cc4368ebcb1faf1a43b44d33545164999cdc7421570f81d9b410701cf8c
      ct: 2b813201b5f2f36723c7491801d69ec221b7a12678c6ce55200c16a0c07fb2e7
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  pick &v6, v2, v3, v4"
      - "  store &v7, v6"
      - "  eq &v8, v7, v5"
      - "  retn v8"
      - "decl f1: <9>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <10>"
      - "  retn 0"
      - "decl f3: <11>"
      - "  retn [0]"
      - "decl f4: <12>"
      - "  retn 0"
      - "decl f5: <13>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f6: <14>"
      - "  retn 0"
      - "decl f7: <15>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <16>"
      - "  retn 0"
      - "decl f9: <17>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f10: <18>"
      - "  retn 0"
      - "decl f11: <19>"
      - "  retn [0, 0, 0, 0]"
      - "decl f12: <20>"
      - "  retn 0"
      - "decl f13: <21>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f14: <22>"
      - "  retn 0"
      - "decl f15: <23>"
      - "  retn [0, 0]"
      - "decl f16: <24>"
      - "  retn 0"
      - "decl f17: <25>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f18: <26>"
      - "  retn 0"
      - "decl f19: <27>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <28>"
      - "  retn 0"
      - "decl f21: <29>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <30>"
      - "  retn 0"
      - "decl f23: <31>"
      - "  retn [0]"
      - "decl f24: <32>"
      - "  retn 0"
      - "decl f25: <33>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <34>"
      - "  retn 0"
      - "decl f27: <35>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f28: <36>"
      - "  retn 0"
      - "decl f29: <37>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <38>"
      - "  retn 0"
      - "decl f31: <39>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <40>"
      - "  retn 0"
      - "decl f33: <41>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <42>"
      - "  retn 0"
      - "decl f35: <43>"
      - "  retn [0, 0]"
      - "decl f36: <44>"
      - "  retn 0"
      - "decl f37: <45>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <46>"
      - "  retn 0"
      - "decl f39: <47>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <48>"
      - "  retn 0"
      - "decl f41: <49>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <50>"
      - "  retn []group"
      - "decl f43: <51>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f44: <52>"
      - "  retn []group"
      - "decl f45: <53>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f46: <54>"
      - "  retn []"
      - "decl f47: <55>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f48: <56>"
      - "  retn []"
      - "decl f49: <57>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f50: <58>"
      - "  retn 'a'"
      - "decl f51: <59>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f52: <60>"
      - "  retn 'a'"
      - "decl f53: <61>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f54: <62>"
      - "  retn false"
      - "decl f55: <63>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <64>"
      - "  retn false"
      - "decl f57: <65>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f58: <66>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f59: <67>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <68>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - ""
    output:
      - input_file: u128_t.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
      - input_file: u128_f.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_ast: 72fc7df2093d184a30f4d09b972baa13fe49c290a393e868df0db8ba46e3b3e3
    imports_resolved_ast: 2b7c5ebe7b001b73141e570fea7eed9906a8ea2f9bf9629c6cbf86dd9615b1e0
    canonicalized_ast: 2b7c5ebe7b001b73141e570fea7eed9906a8ea2f9bf9629c6cbf86dd9615b1e0
    type_inferenced_ast: 9ff200eab38dbd451eb86be3876a1a396575e469aeb81c097bfa928c7c29900e
