---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1914
      num_constraints: 2558
      at: 4736445d494d9b9a754b2eb5c91df5310290d0954417b5a89918f2bf1f4ae134
      bt: 36a24962d91c3492840ab49513db6874c8e617cf8d1b985f756cd54843dac885
      ct: 0132d343b82fee719c3af5146f4417ae3fa7c285f1b5e2aebe9ce2e4505cc336
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, [(1, 1), (2, 2), (3, 3)]"
      - "  aget &v4, v3, v2"
      - "  tget &v5, v4, 0"
      - "  tset &v4, 0, 0"
      - "  aset &v3, v2, v4"
      - "  store &v3, v3"
      - "  aget &v6, v3, v2"
      - "  tget &v7, v6, 1"
      - "  tset &v6, 1, 1"
      - "  aset &v3, v2, v6"
      - "  store &v3, v3"
      - "  retn v3"
      - "decl f1: <8>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <9>"
      - "  retn 0"
      - "decl f3: <10>"
      - "  retn [0]"
      - "decl f4: <11>"
      - "  retn 0"
      - "decl f5: <12>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f6: <13>"
      - "  retn 0"
      - "decl f7: <14>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <15>"
      - "  retn 0"
      - "decl f9: <16>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f10: <17>"
      - "  retn 0"
      - "decl f11: <18>"
      - "  retn [0, 0, 0, 0]"
      - "decl f12: <19>"
      - "  retn 0"
      - "decl f13: <20>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f14: <21>"
      - "  retn 0"
      - "decl f15: <22>"
      - "  retn [0, 0]"
      - "decl f16: <23>"
      - "  retn 0"
      - "decl f17: <24>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f18: <25>"
      - "  retn 0"
      - "decl f19: <26>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <27>"
      - "  retn 0"
      - "decl f21: <28>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <29>"
      - "  retn 0"
      - "decl f23: <30>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f24: <31>"
      - "  retn 0"
      - "decl f25: <32>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <33>"
      - "  retn 0"
      - "decl f27: <34>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f28: <35>"
      - "  retn 0"
      - "decl f29: <36>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <37>"
      - "  retn 0"
      - "decl f31: <38>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f32: <39>"
      - "  retn 0"
      - "decl f33: <40>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <41>"
      - "  retn 0"
      - "decl f35: <42>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <43>"
      - "  retn 0"
      - "decl f37: <44>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <45>"
      - "  retn 0"
      - "decl f39: <46>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <47>"
      - "  retn 0"
      - "decl f41: <48>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <49>"
      - "  retn []group"
      - "decl f43: <50>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f44: <51>"
      - "  retn []group"
      - "decl f45: <52>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f46: <53>"
      - "  retn []"
      - "decl f47: <54>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f48: <55>"
      - "  retn []"
      - "decl f49: <56>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f50: <57>"
      - "  retn 'a'"
      - "decl f51: <58>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f52: <59>"
      - "  retn 'a'"
      - "decl f53: <60>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f54: <61>"
      - "  retn false"
      - "decl f55: <62>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <63>"
      - "  retn false"
      - "decl f57: <64>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f58: <65>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f59: <66>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <67>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - ""
    output:
      - input_file: input/index1_tuple.in
        output:
          registers:
            r0:
              type: "[(u32, u32); 3]"
              value: "[(1, 1), (0, 1), (3, 3)]"
      - input_file: input/index2_tuple.in
        output:
          registers:
            r0:
              type: "[(u32, u32); 3]"
              value: "[(1, 1), (2, 2), (0, 1)]"
    initial_ast: 9b212cce633868e2402117894ac37c7729f2f8ed44a90cd649d12d8244c5c1e8
    imports_resolved_ast: 5edc7c34348a354ab2a84ed788c9b657b7405ccc845bbe51d0a0de92f42ca981
    canonicalized_ast: 5edc7c34348a354ab2a84ed788c9b657b7405ccc845bbe51d0a0de92f42ca981
    type_inferenced_ast: 0da580db968ff909ea185229240f429df169ed6450919257d15c582f4b14a973
