---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1
      num_constraints: 1
      at: 042610d0fd1fe6d6ac112138f8755752f44c7d2a00f1b5960574d6da5cda393f
      bt: e97756698880ab7555a959a5fb5c6b4e15bd64612aa677adbfe2d0bd91f0a83c
      ct: cf1cbb66a638b4860a516671fb74850e6ccf787fe6c4c8d29e9c04efe880bd05
    ir:
      - "decl f0: <0>"
      - "  store &v0, ((), (), (), ())"
      - "  mask 2, v1"
      - "    eq &v3, v1, true"
      - "    assert v3"
      - "  not &v2, v1"
      - "  mask 2, v2"
      - "    eq &v4, v1, false"
      - "    assert v4"
      - "decl f1: <5>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <6>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <7>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <8>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <9>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <10>"
      - "  retn false"
      - "decl f7: <11>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <12>"
      - "  retn false"
      - "decl f9: <13>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <14>"
      - "  retn 'a'"
      - "decl f11: <15>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <16>"
      - "  retn 'a'"
      - "decl f13: <17>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <18>"
      - "  retn []"
      - "decl f15: <19>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <20>"
      - "  retn []"
      - "decl f17: <21>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <22>"
      - "  retn []group"
      - "decl f19: <23>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <24>"
      - "  retn []group"
      - "decl f21: <25>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <26>"
      - "  retn 0"
      - "decl f23: <27>"
      - "  retn [0]"
      - "decl f24: <28>"
      - "  retn 0"
      - "decl f25: <29>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <30>"
      - "  retn 0"
      - "decl f27: <31>"
      - "  retn [0, 0]"
      - "decl f28: <32>"
      - "  retn 0"
      - "decl f29: <33>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <34>"
      - "  retn 0"
      - "decl f31: <35>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <36>"
      - "  retn 0"
      - "decl f33: <37>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <38>"
      - "  retn 0"
      - "decl f35: <39>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <40>"
      - "  retn 0"
      - "decl f37: <41>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <42>"
      - "  retn 0"
      - "decl f39: <43>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <44>"
      - "  retn 0"
      - "decl f41: <45>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <46>"
      - "  retn 0"
      - "decl f43: <47>"
      - "  retn [0]"
      - "decl f44: <48>"
      - "  retn 0"
      - "decl f45: <49>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <50>"
      - "  retn 0"
      - "decl f47: <51>"
      - "  retn [0, 0]"
      - "decl f48: <52>"
      - "  retn 0"
      - "decl f49: <53>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <54>"
      - "  retn 0"
      - "decl f51: <55>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <56>"
      - "  retn 0"
      - "decl f53: <57>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <58>"
      - "  retn 0"
      - "decl f55: <59>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <60>"
      - "  retn 0"
      - "decl f57: <61>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <62>"
      - "  retn 0"
      - "decl f59: <63>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <64>"
      - "  retn 0"
      - ""
    output:
      - input_file: cond.in
        output:
          registers: {}
      - input_file: cond_2.in
        output:
          registers: {}
    initial_ast: 28c806592a7ad6c451ef244530774305fb8ce447469d50ad9bc079fdf454ddfd
    imports_resolved_ast: 37c193c6681f904fce177ddc714026ab833cae85c1244f1e7194fe54e12f8e24
    canonicalized_ast: 30b2bee4703d5e3b8fb0acdfe867e376e05c18b5afe85508a7b825491f140d78
    type_inferenced_ast: bb6deb096b7530120d8b9c7ae9e1de049a923915046c8cc6cd105465a59d3e2d
