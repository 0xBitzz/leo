---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 96
      num_constraints: 96
      at: 8b84997b0dad4895922d62ac6a2fbe62c5e08177b39d7d6d6e6acf57f77e0f65
      bt: 72bd63fa2c144c7595ff79f81416f13877ea8b101bbc03f307013a0b23c387ef
      ct: 0eb0af4085182af2cc7bd348dfa8c10c104c96fdc515cb6f8d88f9f836a94826
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  eq &v3, v2, [[1, 2], [3, 4], [5, 6]]"
      - "  retn v3"
      - "decl f1: <4>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <5>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <6>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <7>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <8>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <9>"
      - "  retn false"
      - "decl f7: <10>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <11>"
      - "  retn false"
      - "decl f9: <12>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <13>"
      - "  retn 'a'"
      - "decl f11: <14>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <15>"
      - "  retn 'a'"
      - "decl f13: <16>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <17>"
      - "  retn []"
      - "decl f15: <18>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <19>"
      - "  retn []"
      - "decl f17: <20>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <21>"
      - "  retn []group"
      - "decl f19: <22>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <23>"
      - "  retn []group"
      - "decl f21: <24>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <25>"
      - "  retn 0"
      - "decl f23: <26>"
      - "  retn [0]"
      - "decl f24: <27>"
      - "  retn 0"
      - "decl f25: <28>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <29>"
      - "  retn 0"
      - "decl f27: <30>"
      - "  retn [0, 0]"
      - "decl f28: <31>"
      - "  retn 0"
      - "decl f29: <32>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <33>"
      - "  retn 0"
      - "decl f31: <34>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <35>"
      - "  retn 0"
      - "decl f33: <36>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <37>"
      - "  retn 0"
      - "decl f35: <38>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <39>"
      - "  retn 0"
      - "decl f37: <40>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <41>"
      - "  retn 0"
      - "decl f39: <42>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <43>"
      - "  retn 0"
      - "decl f41: <44>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <45>"
      - "  retn 0"
      - "decl f43: <46>"
      - "  retn [0]"
      - "decl f44: <47>"
      - "  retn 0"
      - "decl f45: <48>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <49>"
      - "  retn 0"
      - "decl f47: <50>"
      - "  retn [0, 0]"
      - "decl f48: <51>"
      - "  retn 0"
      - "decl f49: <52>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <53>"
      - "  retn 0"
      - "decl f51: <54>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <55>"
      - "  retn 0"
      - "decl f53: <56>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <57>"
      - "  retn 0"
      - "decl f55: <58>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <59>"
      - "  retn 0"
      - "decl f57: <60>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <61>"
      - "  retn 0"
      - "decl f59: <62>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <63>"
      - "  retn 0"
      - ""
    output:
      - input_file: input/six_zeros.in
        output:
          registers:
            x:
              type: bool
              value: "false"
      - input_file: input/count_to_6.in
        output:
          registers:
            x:
              type: bool
              value: "true"
    initial_ast: d0dc7c04e9cd34356055001ead6c4204bfc953c155e342eaeeaf2d9680aa9cb9
    imports_resolved_ast: b613343200614c4bc8305dcd1e8934a1e82ed9762f20e91d44b2bf9fe98c95d3
    canonicalized_ast: ab8a3ad5cb9c249358c0c017c1f26edaa4724e6a74ec098be82eb151857b9a81
    type_inferenced_ast: 2d017bc2fc65ce0b6e6b0b928214ee0a127fbe79cddb4fca507f85724ce367a2
