---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 72
      num_constraints: 72
      at: 0900d254695bb8d2a5e8fb01f1127fc82066527b72c44e45898ce822f56902e1
      bt: 45732d08efa3a2f1fd7f3cef8672c9198cc49f3af2d6dd948d5372368cf911c9
      ct: 14159012c5c74f21802f7a74e3a7a19eed34a3fb06da5095afa741f2180ded03
    ir:
      - "decl f0: <0>"
      - "  store &v1, ((v0), (), (), ())"
      - "  store &v3, [1, 1]"
      - "  store &v4, [1, 1, 1]"
      - "  store &v5, [1, 1, 1]"
      - "  eq &v6, v2, [1, 1, 1]"
      - "  eq &v7, [1, 1, 1], v2"
      - "  and &v8, v6, v7"
      - "  retn v8"
      - "decl f1: <9>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f2: <10>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f3: <11>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f4: <12>"
      - "  retn aleo1qnr4dkkvkgfqph0vzc3y6z2eu975wnpz2925ntjccd5cfqxtyu8sta57j8"
      - "decl f5: <13>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f6: <14>"
      - "  retn false"
      - "decl f7: <15>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f8: <16>"
      - "  retn false"
      - "decl f9: <17>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f10: <18>"
      - "  retn 'a'"
      - "decl f11: <19>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f12: <20>"
      - "  retn 'a'"
      - "decl f13: <21>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f14: <22>"
      - "  retn []"
      - "decl f15: <23>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f16: <24>"
      - "  retn []"
      - "decl f17: <25>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f18: <26>"
      - "  retn []group"
      - "decl f19: <27>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f20: <28>"
      - "  retn []group"
      - "decl f21: <29>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f22: <30>"
      - "  retn 0"
      - "decl f23: <31>"
      - "  retn [0]"
      - "decl f24: <32>"
      - "  retn 0"
      - "decl f25: <33>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f26: <34>"
      - "  retn 0"
      - "decl f27: <35>"
      - "  retn [0, 0]"
      - "decl f28: <36>"
      - "  retn 0"
      - "decl f29: <37>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f30: <38>"
      - "  retn 0"
      - "decl f31: <39>"
      - "  retn [0, 0, 0, 0]"
      - "decl f32: <40>"
      - "  retn 0"
      - "decl f33: <41>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f34: <42>"
      - "  retn 0"
      - "decl f35: <43>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f36: <44>"
      - "  retn 0"
      - "decl f37: <45>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f38: <46>"
      - "  retn 0"
      - "decl f39: <47>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f40: <48>"
      - "  retn 0"
      - "decl f41: <49>"
      - "  retn [false, false, false, false, false, false, false, false]"
      - "decl f42: <50>"
      - "  retn 0"
      - "decl f43: <51>"
      - "  retn [0]"
      - "decl f44: <52>"
      - "  retn 0"
      - "decl f45: <53>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f46: <54>"
      - "  retn 0"
      - "decl f47: <55>"
      - "  retn [0, 0]"
      - "decl f48: <56>"
      - "  retn 0"
      - "decl f49: <57>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f50: <58>"
      - "  retn 0"
      - "decl f51: <59>"
      - "  retn [0, 0, 0, 0]"
      - "decl f52: <60>"
      - "  retn 0"
      - "decl f53: <61>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f54: <62>"
      - "  retn 0"
      - "decl f55: <63>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f56: <64>"
      - "  retn 0"
      - "decl f57: <65>"
      - "  retn [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]"
      - "decl f58: <66>"
      - "  retn 0"
      - "decl f59: <67>"
      - "  retn [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
      - "decl f60: <68>"
      - "  retn 0"
      - ""
    output:
      - input_file: input/three_ones.in
        output:
          registers:
            x:
              type: bool
              value: "true"
    initial_ast: 291c953f6daa2b300bcec55b212d86b19e1689db545a3378012ee27f4b872d51
    imports_resolved_ast: edb7a737d2b8c9419497487530b0c9c2b2379cae4be4a1e27a7315b0f4d645f0
    canonicalized_ast: edb7a737d2b8c9419497487530b0c9c2b2379cae4be4a1e27a7315b0f4d645f0
    type_inferenced_ast: fd9df2719eece50e6f434ae7bb17938334d3561bdfe6941a675c720dea1ab134
